name: build

on:
  push:
    branches:
    - '!master'
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: replace version
      run: python3 version_replace.py
    - name: build
      run: make build/linux # todo: rename build/Linux_libworld.so
  build-mac:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: replace version
      run: python3 version_replace.py
    - name: build
      run: make build/osx
  build-ios:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: replace version
      run: python3 version_replace.py
    - name: build
      run: |
        CXX=`xcrun --sdk iphoneos -f clang++`
        AR=`xcrun --sdk iphoneos -f ar`
        RANLIB=`xcrun --sdk iphoneos -f ranlib`
        make build/ios CXX=${CXX} AR=${AR} RANLIB=${RANLIB} # todo: rename build/ios_libworld.a
  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: replace version
      run: python3 version_replace.py
    - name: setup android toolchain
      run: sh -x ./install_android.sh
    - name: build arm
      run: make build/linux CXX=/tmp/arm-toolchain/bin/clang++ CXXFLAGS="-O1 -Wall -fPIC -march=armv7-a -mfloat-abi=softfp -mfpu=neon" LDFLAGS="-march=armv7-a -Wl,--fix-cortex-a8" ARCH="android/arm"
    - name: build arm64
      run: make build/linux CXX=/tmp/arm64-toolchain/bin/clang++ CXXFLAGS="-O1 -Wall -fPIC" ARCH="android/arm64"
    - name: build x86
      run: make build/linux CXX=/tmp/x86-toolchain/bin/clang++ CXXFLAGS="-O1 -Wall -fPIC" ARCH="android/x86"
    - name: build x86_64
      run: make build/linux CXX=/tmp/x86_64-toolchain/bin/clang++ CXXFLAGS="-O1 -Wall -fPIC" ARCH="android/x86_64"
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1

